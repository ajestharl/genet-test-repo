# ~~ Generated by projen. To modify, edit .projenrc.ts and run "npx projen".

name: release_smithy_client
on:
  push:
    branches:
      - main
  workflow_dispatch: {}
jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    outputs:
      latest_commit: ${{ steps.git_remote.outputs.latest_commit }}
      version: ${{ steps.get_version.outputs.version }}
      should_publish: ${{ steps.check_npm.outputs.should_publish }}
    env:
      CI: "true"
    defaults:
      run:
        working-directory: ./src/packages/my-api/build/smithy/source/typescript-client-codegen
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - name: Install Dependencies
        run: yarn install --check-files --frozen-lockfile
        working-directory: ./
      - name: Get version from releasetag.txt
        id: get_version
        run: |-
          VERSION=$(cat ../../../../../../../dist/releasetag.txt | sed 's/^v//')
          echo "version=$VERSION" >> $GITHUB_OUTPUT
      - name: Check if already published to npm
        id: check_npm
        run: |-
          PKG_NAME=$(node -p "require('./package.json').name")
          VERSION="${{ steps.get_version.outputs.version }}"
          if npm view "$PKG_NAME@$VERSION" > /dev/null 2>&1; then
            echo "already published"
            echo "should_publish=false" >> $GITHUB_OUTPUT
          else
            echo "should_publish=true" >> $GITHUB_OUTPUT
          fi
      - name: Check for new commits
        id: git_remote
        run: echo "latest_commit=${{ github.sha }}" >> $GITHUB_OUTPUT
      - name: Pack Artifact
        if: steps.check_npm.outputs.should_publish == 'true'
        run: yarn pack --filename smithy-client.tgz
      - name: Upload Artifact
        if: steps.check_npm.outputs.should_publish == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: ./src/packages/my-api/build/smithy/source/typescript-client-codegen/smithy-client.tgz
          overwrite: true
  release_npm:
    name: Publish to NPM
    needs: release
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    if: needs.release.outputs.should_publish == 'true' && needs.release.outputs.latest_commit == github.sha
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
          registry-url: https://registry.npmjs.org
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact
          path: ./dist
      - name: Extract smithy-client.tgz
        run: mkdir repo && tar -xzf ./dist/smithy-client.tgz -C repo --strip-components=1
      - name: Update Version
        run: 'VERSION="${{ needs.release.outputs.version }}" && sed -i "s/\"version\": \".*\"/\"version\": \"$VERSION\"/" package.json && echo "Updated version to $VERSION" && cat package.json | grep version'
        working-directory: ./repo
      - name: Remove prepack script
        run: jq 'del(.scripts.prepack)' package.json > package.tmp.json && mv package.tmp.json package.json
        working-directory: ./repo
      - name: Publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN_SMITHY }}
        run: npm publish --access public
        working-directory: ./repo
  release_github:
    name: Publish to GitHub Releases
    needs:
      - release
      - release_npm
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: needs.release.outputs.should_publish == 'true' && needs.release.outputs.latest_commit == github.sha
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact
          path: ./dist
      - name: GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: 'VERSION="v${{ needs.release.outputs.version }}" && echo "Creating release for version: $VERSION" && gh release create "$VERSION" --title "$VERSION" --notes "Automated release for Smithy client" ./dist/smithy-client.tgz || echo "Release may already exist"'
