# ~~ Generated by projen. To modify, edit .projenrc.ts and run "npx projen".

name: central-release
on:
  push:
    branches:
      - rel
  workflow_dispatch: {}
jobs:
  bump_version:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    outputs:
      version: ${{ steps.getver.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set Git Identity
        run: |-
          git config --global user.email "github-actions@github.com"
          git config --global user.name "GitHub Actions"
      - name: Read Version
        id: getver
        run: |-
          VERSION="0.0.36"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Release version: $VERSION"
  release_ajithapackage:
    needs: bump_version
    permissions:
      contents: write
      id-token: write
    uses: ./.github/workflows/release_package.yml
    with:
      version: ${{ needs.bump_version.outputs.version }}
      package_name: ajithapackage
      package_path: src/packages/ajithapackage1
    secrets: inherit
  release_ajithapackage2:
    needs: bump_version
    permissions:
      contents: write
      id-token: write
    uses: ./.github/workflows/release_package.yml
    with:
      version: ${{ needs.bump_version.outputs.version }}
      package_name: ajithapackage2
      package_path: src/packages/ajithapackage2
    secrets: inherit
  release_smithy_client:
    needs: bump_version
    permissions:
      contents: write
      id-token: write
    uses: ./.github/workflows/release_package.yml
    with:
      version: ${{ needs.bump_version.outputs.version }}
      package_name: smithy-client
      package_path: src/packages/my-api/build/smithy/source/typescript-client-codegen
    secrets: inherit
  release_smithy_ssdk:
    needs: bump_version
    permissions:
      contents: write
      id-token: write
    uses: ./.github/workflows/release_package.yml
    with:
      version: ${{ needs.bump_version.outputs.version }}
      package_name: smithy-ssdk
      package_path: src/packages/my-api/build/smithy/source/typescript-ssdk-codegen
    secrets: inherit
  npm_release:
    needs:
      - bump_version
      - release_ajithapackage
      - release_ajithapackage2
      - release_smithy_client
      - release_smithy_ssdk
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    env:
      CI: "true"
    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          registry-url: https://registry.npmjs.org
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true
      - name: List downloaded artifacts
        run: ls -la
      - name: Extract packages
        run: |-
          packages=(ajithapackage ajithapackage2 smithy-client smithy-ssdk)
          for pkg in "${packages[@]}"; do
            echo "Extracting $pkg..."
            mkdir -p "$pkg"
            tar -xzf "$pkg.tgz" -C "$pkg" --strip-components=1 || { echo "Error extracting $pkg"; exit 1; }
          done
      - name: Patch version in each package
        run: |-
          version="${{ needs.bump_version.outputs.version }}"
          packages=(ajithapackage ajithapackage2 smithy-client smithy-ssdk)
          for pkg in "${packages[@]}"; do
            echo "Patching version in $pkg/package.json"
            cd "$pkg"
            jq --arg ver "$version" '.version = $ver' package.json > tmp.json && mv tmp.json package.json
            cat package.json | grep version
            cd ..
          done
      - name: Publish packages to npm
        id: publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.TOKEN }}
        run: |-
          published=()
          version="${{ needs.bump_version.outputs.version }}"
          rollback() {
            echo "Error during publishing, rolling back..."
            for pkg in "${published[@]}"; do
              echo "Unpublishing $pkg@$version"
              npm unpublish "$pkg@$version" --force || echo "Failed to unpublish $pkg"
            done
            echo "publishing_failed=true" >> $GITHUB_OUTPUT
            exit 1
          }
          trap rollback ERR
          packages=(ajithapackage ajithapackage2 smithy-client smithy-ssdk)
          for pkg in "${packages[@]}"; do
            echo "Publishing $pkg@$version"
            cd "$pkg"
            if npm publish --access public; then
              published+=("$pkg")
              echo "Successfully published $pkg@$version"
              cd ..
            else
              echo "Failed to publish $pkg"
              cd ..
              rollback
            fi
          done
          echo "All packages published successfully"
          echo "publishing_failed=false" >> $GITHUB_OUTPUT
      - name: Finalize Release
        run: |-
          echo "All child workflows have completed successfully."
          echo "All packages are published to NPM"
  github_release:
    needs:
      - npm_release
      - bump_version
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    env:
      CI: "true"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true
      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release create "v${{ needs.bump_version.outputs.version }}" --title "v${{ needs.bump_version.outputs.version }}" --notes "Automated release for all packages" *.tgz
  cleanup_failed_tag:
    needs:
      - bump_version
      - npm_release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    if: failure() && (needs.bump_version.result == 'success' || needs.npm_release.outputs.publishing_failed == 'true')
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Delete Git Tag
        run: |-
          TAG=$(cat src/packages/ajithapackage1/dist/releasetag.txt)
          echo "Deleting tag: $TAG"
          git tag -d "$TAG" || true
          git push origin ":refs/tags/$TAG" || true
concurrency:
  group: release
  cancel-in-progress: false
