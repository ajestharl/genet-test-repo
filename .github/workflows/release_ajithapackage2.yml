# ~~ Generated by projen. To modify, edit .projenrc.ts and run "npx projen".

name: release_ajithapackage2
on:
  workflow_call:
    inputs:
      version:
        required: true
        type: string
jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    defaults:
      run:
        working-directory: src/packages/ajithapackage2
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set Git identity
        run: |-
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          registry-url: https://registry.npmjs.org
      - name: Install dependencies
        run: yarn install --check-files --frozen-lockfile
        working-directory: .
      - name: Compile
        run: npx projen compile
      - name: Build JS package
        run: npx projen package
      - name: Backup artifact permissions
        run: cd dist && getfacl -R . > permissions-backup.acl
        continue-on-error: true
      - name: Upload JS artifact
        uses: actions/upload-artifact@v4
        with:
          name: ajithapackage2-artifact
          path: src/packages/ajithapackage2/dist
          overwrite: true
      - name: Remove prepack
        run: jq 'del(.scripts.prepack)' package.json > package.tmp.json && mv package.tmp.json package.json
      - name: Release
        env:
          NPM_TOKEN: ${{ secrets.TOKEN }}
        run: |-
          echo "Checking NPM_TOKEN length: ${#NPM_TOKEN}"
          echo "Publishing version: ${{ inputs.version }}"
          DEBUG=* npx -p publib publib-npm --version ${{ inputs.version }}
  release_github:
    name: Publish GitHub Release
    needs: release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: always() && needs.release.result == 'success'
    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: ajithapackage2-artifact
          path: dist
      - name: Restore build artifact permissions
        run: cd dist && setfacl --restore=permissions-backup.acl
        continue-on-error: true
      - name: GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: "

          \        TAG=\"v${{ inputs.version }}\"

          \        gh release create \"$TAG\" -F dist/changelog.md -t \"$TAG\" --target $GITHUB_SHA || echo \"Release might already exist\"

          \      "
