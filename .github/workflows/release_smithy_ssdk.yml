# ~~ Generated by projen. To modify, edit .projenrc.ts and run "npx projen".

name: release_smithy_ssdk
on:
  push:
    branches:
      - main
  workflow_dispatch: {}
  workflow_call:
    inputs:
      version:
        required: true
        type: string
        description: Version to release
jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    outputs:
      latest_commit: ${{ steps.git_remote.outputs.latest_commit }}
      next_version: ${{ steps.next_version.outputs.version }}
      tag_exists: ${{ steps.check_tag_exists.outputs.exists }}
    env:
      CI: "true"
    defaults:
      run:
        working-directory: ./src/packages/my-api/build/smithy/source/typescript-ssdk-codegen
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - name: Install Dependencies
        run: yarn install --check-files --frozen-lockfile
        working-directory: ./
      - name: Determine Next Version
        id: next_version
        run: "PACKAGE_NAME=$(node -p \"require('./package.json').name\") && CURRENT_VERSION=$(npm view $PACKAGE_NAME version 2>/dev/null || echo '0.0.0') && NEXT_VERSION=$(echo $CURRENT_VERSION | awk -F. '{$NF = $NF + 1;} 1' | sed 's/ /./g') && echo \"Next version will be: $NEXT_VERSION\" && echo \"version=$NEXT_VERSION\" >> $GITHUB_OUTPUT"
      - name: Check if Tag Exists
        id: check_tag_exists
        run: |-
          TAG="v${{ steps.next_version.outputs.version }}"
          echo "Checking for tag: $TAG"
          if git rev-parse "$TAG" >/dev/null 2>&1; then
            echo "Tag exists=true"
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "Tag exists=false"
            echo "exists=false" >> $GITHUB_OUTPUT
          fi
          echo "Output value:"
          cat $GITHUB_OUTPUT
      - name: Create Tag
        if: steps.check_tag_exists.outputs.exists == 'false'
        run: |-
          VERSION="${{ steps.next_version.outputs.version }}"
          git tag "v$VERSION"
          git push origin "v$VERSION"
      - name: Check for new commits
        id: git_remote
        run: echo "latest_commit=${{ github.sha }}" >> $GITHUB_OUTPUT
      - name: Pack Artifact
        run: yarn pack --filename smithy-ssdk.tgz
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: ./src/packages/my-api/build/smithy/source/typescript-ssdk-codegen
          overwrite: true
  release_npm:
    name: Publish to NPM
    needs: release
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    if: needs.release.outputs.tag_exists != 'true' && needs.release.outputs.latest_commit == github.sha
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
          registry-url: https://registry.npmjs.org
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact
          path: ./dist
      - name: Extract smithy-ssdk.tgz
        run: mkdir repo && tar -xzf ./dist/smithy-ssdk.tgz -C repo --strip-components=1
      - name: Update Version
        run: 'VERSION="${{ needs.release.outputs.next_version }}" && sed -i "s/\"version\": \".*\"/\"version\": \"$VERSION\"/" package.json && echo "Updated version to $VERSION" && cat package.json | grep version'
        working-directory: ./repo
      - name: Remove prepack script
        run: jq 'del(.scripts.prepack)' package.json > package.tmp.json && mv package.tmp.json package.json
        working-directory: ./repo
      - name: Publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN_SMITHY }}
        run: npm publish --access public
        working-directory: ./repo
  release_github:
    name: Publish to GitHub Releases
    needs:
      - release
      - release_npm
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: needs.release.outputs.tag_exists != 'true' && needs.release.outputs.latest_commit == github.sha
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact
          path: ./dist
      - name: GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: 'VERSION="${{ needs.release.outputs.next_version }}" && echo "Creating release for version: v$VERSION" && gh release create "v$VERSION" --title "v$VERSION" --notes "Automated release for SSDK" ./dist/smithy-ssdk.tgz'
